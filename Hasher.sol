// SPDX-License-Identifier: MIT
pragma solidity 0.8.17;

contract Hasher {
    
    uint256 p = 21888242871839275222246405745257275088548364400416034343698204186575808495617;
    uint8 nRounds = 10;
    uint256[10] c = [
        0,
        21469745217645236226405533686231592324177671190346326883245530828586381403876,
        50297292308054131785073003188640636012765603289604974664717077154647718767691,
        106253950757591248575183329665927832654891498741470681534742234294971120334749,
        16562112986402259118419179721668484133429300227020801196120440207549964854140,
        57306670214488528918457646459609688072645567370160016749464560944657195907328,
        108800175491146374658636808924848899594398629303837051145484851272960953126700,
        52091995457855965380176529746846521763751311625573037022759665111626306997253,
        4647715852037907467884498874870960430435996725635089920518875461648844420543,
        19720773146379732435540009001854231484085729453524050584265326241021328895041
    ];

    function MiMC5(uint256 x, uint256 k) public view returns(uint256 h) {
        uint256 lastOutput = x;

        uint256 base;
        uint256 base2;
        uint256 base4;

        for(uint8 i = 0; i < nRounds; i++){
            base = addmod(lastOutput, k, p);
            base = addmod(base, c[i], p);
            
            base2 = mulmod(base, base, p);
            base4 = mulmod(base2, base2, p);

            lastOutput = mulmod(base4, base, p);
        }

        h = addmod(lastOutput, k, p);
    }
}
